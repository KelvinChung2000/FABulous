set project_root $env(FAB_PROJECT_DIR)
set output_json_path $env(OUT_JSON_PATH)


yosys read_verilog -sv -lib $project_root/.FABulous/libs.v
yosys read_verilog -sv -lib $project_root/.FABulous/build_in_lib.v

# Handle TOP_MODULE environment variable - use auto-top if not set or empty
if {[info exists env(TOP_MODULE)] && $env(TOP_MODULE) ne ""} {
    set top_module $env(TOP_MODULE)
    puts "using top module: $top_module"
    yosys hierarchy -top $top_module
} else {
    puts "using auto-top for hierarchy"
    yosys hierarchy -auto-top
}

yosys setattr -set keep_hierarchy 1 -mod m:*

yosys flatten -noscopeinfo
yosys proc
yosys setattr -set keep 1 m:*
yosys opt_expr
yosys opt_clean
yosys check
yosys opt -nodffe -nosdff
yosys fsm -expand -nomap
yosys opt -full
yosys techmap -map $project_root/.FABulous/logic_to_std.v

yosys wreduce
yosys peepopt
yosys opt_clean
yosys share
yosys opt_expr
yosys opt_clean
yosys fsm -encoding binary
yosys techmap -map $project_root/.FABulous/reduce_or_to_or.v
yosys techmap -map $project_root/.FABulous/reduce_and_to_and.v
yosys techmap -map $project_root/.FABulous/eq_to_logic.v
yosys techmap -map $project_root/.FABulous/ne_to_logic.v
yosys opt -full
yosys clean -purge

# memory opt
yosys memory -nomap
yosys memory_libmap -lib $project_root/.FABulous/memory_map.txt
yosys techmap -map $project_root/.FABulous/techmaps.v
yosys clean -purge

proc extract {cell wrapperPath} {
# wrapping for mapping
yosys design -push
yosys read_json $cell
yosys techmap -map $wrapperPath
yosys design -save xmap
yosys design -pop

# extracting cell
yosys extract -constports -ignore_parameters -map %xmap
yosys design -delete xmap
}
{% for wrapperPath, unWrapperPath, wrapperNames, cells in wrappers %}
# wrapping base design
yosys techmap -map {{ wrapperPath }}
{% for wrapperName, outWidthPair in wrapperNames -%}
yosys connwrappers {% for outPort, outParam in outWidthPair %}-unsigned {{ wrapperName }} {{ outPort }} {{ outParam }}
{%- endfor %}
{% endfor %}
# extract cells
{%- for cell in cells %}
extract "{{ cell }}" \
"{{ wrapperPath }}"
{%- endfor %}

# unwrapping
yosys techmap -map {{ unWrapperPath }}
yosys opt -full
yosys clean -purge
{% endfor %}

# FSM mapping
{# yosys techmap -map /home/kelvin/FABulous_fork/myProject/PnR/fsm_map.v
yosys memory_libmap -lib $project_root/.FABulous/memory_map.txt #}

# cell techmapping
yosys techmap -map $project_root/.FABulous/techmaps.v

# const unit mapping
yosys constmap -cell \$__const O VALUE
yosys techmap -map $project_root/.FABulous/const_map.v
yosys opt -full

# io mapping
yosys iopadmap -widthparam WIDTH -outpad \$__external_out I:O -inpad \$__external_in O:I
yosys techmap -map $project_root/.FABulous/IO_techmap.v
yosys iopadmap -bits -outpad OUTBUF I:PAD -inpad INBUF O:PAD

# final optimization
yosys opt -full
yosys clean -purge
yosys fsm_info
yosys show -enum -long -width -format dot -prefix $project_root/.FABulous/design
yosys write_json $output_json_path
yosys stat
