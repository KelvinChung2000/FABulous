/* Generated by Yosys 0.53+15 (git sha1 690081810, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* hdlname = "main" *)
(* top =  1  *)
(* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:571.1-663.10" *)
module main(in0, in1, clk, reset, go, done);
  wire [31:0] _000_;
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  (* unused_bits = "0" *)
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  (* unused_bits = "0" *)
  wire _010_;
  wire _011_;
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _012_;
  wire [31:0] _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire _016_;
  wire _017_;
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:516.14-516.26|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:886.3-890.2|myProject/Tile/PE/metadata/ALU/wrap_map_ALU.v:104.17-104.21" *)
  wire [31:0] _018_;
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:773.8-775.12|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:906.20-933.2|myProject/Tile/PE/metadata/ALU/wrap_map_ALU.v:188.17-188.21" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _019_;
  (* clk = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:574.27-574.30" *)
  input clk;
  wire clk;
  (* done = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:577.29-577.33" *)
  output done;
  wire done;
  (* go = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:576.26-576.28" *)
  input go;
  wire go;
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:572.22-572.25" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:573.22-573.25" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* data = 32'd1 *)
  (* hdlname = "loop_array_instance arg_mem_0_addr0" *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:792.35-792.50" *)
  wire [3:0] \loop_array_instance.arg_mem_0_addr0 ;
  (* hdlname = "loop_array_instance arg_mem_0_done" *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:797.15-797.29" *)
  wire \loop_array_instance.arg_mem_0_done ;
  (* data = 32'd1 *)
  (* hdlname = "loop_array_instance arg_mem_0_write_data" *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:795.36-795.56" *)
  wire [31:0] \loop_array_instance.arg_mem_0_write_data ;
  (* hdlname = "loop_array_instance fsm fsm_std_add_1_right_in" *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:679.23-679.45|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:906.20-933.2" *)
  wire [31:0] \loop_array_instance.fsm.fsm_std_add_1_right_in ;
  (* hdlname = "loop_array_instance fsm std_slice_1_out" *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:623.12-636.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:681.21-681.36|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:906.20-933.2" *)
  wire [3:0] \loop_array_instance.fsm.std_slice_1_out ;
  (* hdlname = "mem_0 read_data" *)
  (* keep = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:611.3-620.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:322.40-322.49" *)
  wire [31:0] \mem_0.read_data ;
  (* hdlname = "mem_0 write_data" *)
  (* keep = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:611.3-620.2|/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:325.44-325.54" *)
  wire [31:0] \mem_0.write_data ;
  (* reset = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/benchmarks/userbench/loop_array_inner/loop_array_inner.sv:575.29-575.34" *)
  input reset;
  wire reset;
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/const_map.v:13.7-15.6" *)
  const_unit #(
    .ConfigBits(32'd15),
    .WIDTH(32'd32)
  ) _020_ (
    .const_out(_001_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:66.7-71.6" *)
  ALU #(
    .ALU_func(1'h0)
  ) _021_ (
    .data_in1(_014_),
    .data_in2(\loop_array_instance.fsm.fsm_std_add_1_right_in ),
    .data_in3(1'hz),
    .data_out(\mem_0.write_data )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:66.7-71.6" *)
  ALU #(
    .ALU_func(1'h0)
  ) _022_ (
    .data_in1({ 28'h0000000, _012_[3:0] }),
    .data_in2(_001_),
    .data_in3(1'hz),
    .data_out({ _018_[31:4], \loop_array_instance.fsm.std_slice_1_out  })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:166.7-171.6" *)
  ALU #(
    .ALU_func(3'h6)
  ) _023_ (
    .data_in1({ 28'h0000000, _012_[3:0] }),
    .data_in2({ _018_[31:4], \loop_array_instance.fsm.std_slice_1_out  }),
    .data_in3(\loop_array_instance.arg_mem_0_done ),
    .data_out({ _019_[31:4], \loop_array_instance.arg_mem_0_addr0  })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:284.7-288.6" *)
  logic_op #(
    .conf(1'h0)
  ) _024_ (
    .A(_005_),
    .B(_008_),
    .Y(_004_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:284.7-288.6" *)
  logic_op #(
    .conf(1'h0)
  ) _025_ (
    .A(_004_),
    .B(\loop_array_instance.arg_mem_0_done ),
    .Y(_002_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:307.7-311.6" *)
  logic_op #(
    .conf(1'h1)
  ) _026_ (
    .A(_008_),
    .B(_002_),
    .Y(_003_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:353.7-357.6" *)
  logic_op #(
    .conf(2'h3)
  ) _027_ (
    .A(\loop_array_instance.arg_mem_0_done ),
    .B(1'hz),
    .Y(_008_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:353.7-357.6" *)
  logic_op #(
    .conf(2'h3)
  ) _028_ (
    .A(_016_),
    .B(1'hz),
    .Y(_005_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:550.7-555.6" *)
  reg_unit_WIDTH_1 #(
    .tide_en(1'h1),
    .tide_rst(1'h0)
  ) _029_ (
    .en(1'hz),
    .reg_in(_003_),
    .reg_out(\loop_array_instance.arg_mem_0_done ),
    .rst(1'hz)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:409.7-414.6" *)
  reg_unit #(
    .tide_en(1'h0),
    .tide_rst(1'h1)
  ) _030_ (
    .en(\loop_array_instance.arg_mem_0_done ),
    .reg_in(_000_),
    .reg_out(\mem_0.read_data ),
    .rst(_016_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:409.7-414.6" *)
  reg_unit #(
    .tide_en(1'h0),
    .tide_rst(1'h1)
  ) _031_ (
    .en(\loop_array_instance.arg_mem_0_done ),
    .reg_in(\mem_0.read_data ),
    .reg_out(\loop_array_instance.fsm.fsm_std_add_1_right_in ),
    .rst(_016_)
  );
  (* keep = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/IO_techmap.v:15.33-20.6" *)
  IO_WIDTH_1 #(
    .WIDTH(32'd1)
  ) _032_ (
    .in(_007_),
    .to_fabric(_006_)
  );
  (* keep = 32'd1 *)
  INBUF _033_ (
    .O(_007_),
    .PAD(clk)
  );
  (* keep = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/IO_techmap.v:46.33-51.6" *)
  IO_WIDTH_1 #(
    .WIDTH(32'd1)
  ) _034_ (
    .from_fabric(_008_),
    .out(_009_)
  );
  (* keep = 32'd1 *)
  OUTBUF _035_ (
    .I(_009_),
    .PAD(done)
  );
  (* keep = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/IO_techmap.v:15.33-20.6" *)
  IO_WIDTH_1 #(
    .WIDTH(32'd1)
  ) _036_ (
    .in(_011_),
    .to_fabric(_010_)
  );
  (* keep = 32'd1 *)
  INBUF _037_ (
    .O(_011_),
    .PAD(go)
  );
  (* keep = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/IO_techmap.v:22.25-27.6" *)
  IO #(
    .WIDTH(32'd32)
  ) _038_ (
    .in(_013_),
    .to_fabric(_012_)
  );
  (* keep = 32'd1 *)
  INBUF _039_ (
    .O(_013_[0]),
    .PAD(in0[0])
  );
  (* keep = 32'd1 *)
  INBUF _040_ (
    .O(_013_[9]),
    .PAD(in0[9])
  );
  (* keep = 32'd1 *)
  INBUF _041_ (
    .O(_013_[10]),
    .PAD(in0[10])
  );
  (* keep = 32'd1 *)
  INBUF _042_ (
    .O(_013_[11]),
    .PAD(in0[11])
  );
  (* keep = 32'd1 *)
  INBUF _043_ (
    .O(_013_[12]),
    .PAD(in0[12])
  );
  (* keep = 32'd1 *)
  INBUF _044_ (
    .O(_013_[13]),
    .PAD(in0[13])
  );
  (* keep = 32'd1 *)
  INBUF _045_ (
    .O(_013_[14]),
    .PAD(in0[14])
  );
  (* keep = 32'd1 *)
  INBUF _046_ (
    .O(_013_[15]),
    .PAD(in0[15])
  );
  (* keep = 32'd1 *)
  INBUF _047_ (
    .O(_013_[16]),
    .PAD(in0[16])
  );
  (* keep = 32'd1 *)
  INBUF _048_ (
    .O(_013_[17]),
    .PAD(in0[17])
  );
  (* keep = 32'd1 *)
  INBUF _049_ (
    .O(_013_[18]),
    .PAD(in0[18])
  );
  (* keep = 32'd1 *)
  INBUF _050_ (
    .O(_013_[1]),
    .PAD(in0[1])
  );
  (* keep = 32'd1 *)
  INBUF _051_ (
    .O(_013_[19]),
    .PAD(in0[19])
  );
  (* keep = 32'd1 *)
  INBUF _052_ (
    .O(_013_[20]),
    .PAD(in0[20])
  );
  (* keep = 32'd1 *)
  INBUF _053_ (
    .O(_013_[21]),
    .PAD(in0[21])
  );
  (* keep = 32'd1 *)
  INBUF _054_ (
    .O(_013_[22]),
    .PAD(in0[22])
  );
  (* keep = 32'd1 *)
  INBUF _055_ (
    .O(_013_[23]),
    .PAD(in0[23])
  );
  (* keep = 32'd1 *)
  INBUF _056_ (
    .O(_013_[24]),
    .PAD(in0[24])
  );
  (* keep = 32'd1 *)
  INBUF _057_ (
    .O(_013_[25]),
    .PAD(in0[25])
  );
  (* keep = 32'd1 *)
  INBUF _058_ (
    .O(_013_[26]),
    .PAD(in0[26])
  );
  (* keep = 32'd1 *)
  INBUF _059_ (
    .O(_013_[27]),
    .PAD(in0[27])
  );
  (* keep = 32'd1 *)
  INBUF _060_ (
    .O(_013_[28]),
    .PAD(in0[28])
  );
  (* keep = 32'd1 *)
  INBUF _061_ (
    .O(_013_[2]),
    .PAD(in0[2])
  );
  (* keep = 32'd1 *)
  INBUF _062_ (
    .O(_013_[29]),
    .PAD(in0[29])
  );
  (* keep = 32'd1 *)
  INBUF _063_ (
    .O(_013_[30]),
    .PAD(in0[30])
  );
  (* keep = 32'd1 *)
  INBUF _064_ (
    .O(_013_[31]),
    .PAD(in0[31])
  );
  (* keep = 32'd1 *)
  INBUF _065_ (
    .O(_013_[3]),
    .PAD(in0[3])
  );
  (* keep = 32'd1 *)
  INBUF _066_ (
    .O(_013_[4]),
    .PAD(in0[4])
  );
  (* keep = 32'd1 *)
  INBUF _067_ (
    .O(_013_[5]),
    .PAD(in0[5])
  );
  (* keep = 32'd1 *)
  INBUF _068_ (
    .O(_013_[6]),
    .PAD(in0[6])
  );
  (* keep = 32'd1 *)
  INBUF _069_ (
    .O(_013_[7]),
    .PAD(in0[7])
  );
  (* keep = 32'd1 *)
  INBUF _070_ (
    .O(_013_[8]),
    .PAD(in0[8])
  );
  (* keep = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/IO_techmap.v:22.25-27.6" *)
  IO #(
    .WIDTH(32'd32)
  ) _071_ (
    .in(_015_),
    .to_fabric(_014_)
  );
  (* keep = 32'd1 *)
  INBUF _072_ (
    .O(_015_[0]),
    .PAD(in1[0])
  );
  (* keep = 32'd1 *)
  INBUF _073_ (
    .O(_015_[9]),
    .PAD(in1[9])
  );
  (* keep = 32'd1 *)
  INBUF _074_ (
    .O(_015_[10]),
    .PAD(in1[10])
  );
  (* keep = 32'd1 *)
  INBUF _075_ (
    .O(_015_[11]),
    .PAD(in1[11])
  );
  (* keep = 32'd1 *)
  INBUF _076_ (
    .O(_015_[12]),
    .PAD(in1[12])
  );
  (* keep = 32'd1 *)
  INBUF _077_ (
    .O(_015_[13]),
    .PAD(in1[13])
  );
  (* keep = 32'd1 *)
  INBUF _078_ (
    .O(_015_[14]),
    .PAD(in1[14])
  );
  (* keep = 32'd1 *)
  INBUF _079_ (
    .O(_015_[15]),
    .PAD(in1[15])
  );
  (* keep = 32'd1 *)
  INBUF _080_ (
    .O(_015_[16]),
    .PAD(in1[16])
  );
  (* keep = 32'd1 *)
  INBUF _081_ (
    .O(_015_[17]),
    .PAD(in1[17])
  );
  (* keep = 32'd1 *)
  INBUF _082_ (
    .O(_015_[18]),
    .PAD(in1[18])
  );
  (* keep = 32'd1 *)
  INBUF _083_ (
    .O(_015_[1]),
    .PAD(in1[1])
  );
  (* keep = 32'd1 *)
  INBUF _084_ (
    .O(_015_[19]),
    .PAD(in1[19])
  );
  (* keep = 32'd1 *)
  INBUF _085_ (
    .O(_015_[20]),
    .PAD(in1[20])
  );
  (* keep = 32'd1 *)
  INBUF _086_ (
    .O(_015_[21]),
    .PAD(in1[21])
  );
  (* keep = 32'd1 *)
  INBUF _087_ (
    .O(_015_[22]),
    .PAD(in1[22])
  );
  (* keep = 32'd1 *)
  INBUF _088_ (
    .O(_015_[23]),
    .PAD(in1[23])
  );
  (* keep = 32'd1 *)
  INBUF _089_ (
    .O(_015_[24]),
    .PAD(in1[24])
  );
  (* keep = 32'd1 *)
  INBUF _090_ (
    .O(_015_[25]),
    .PAD(in1[25])
  );
  (* keep = 32'd1 *)
  INBUF _091_ (
    .O(_015_[26]),
    .PAD(in1[26])
  );
  (* keep = 32'd1 *)
  INBUF _092_ (
    .O(_015_[27]),
    .PAD(in1[27])
  );
  (* keep = 32'd1 *)
  INBUF _093_ (
    .O(_015_[28]),
    .PAD(in1[28])
  );
  (* keep = 32'd1 *)
  INBUF _094_ (
    .O(_015_[2]),
    .PAD(in1[2])
  );
  (* keep = 32'd1 *)
  INBUF _095_ (
    .O(_015_[29]),
    .PAD(in1[29])
  );
  (* keep = 32'd1 *)
  INBUF _096_ (
    .O(_015_[30]),
    .PAD(in1[30])
  );
  (* keep = 32'd1 *)
  INBUF _097_ (
    .O(_015_[31]),
    .PAD(in1[31])
  );
  (* keep = 32'd1 *)
  INBUF _098_ (
    .O(_015_[3]),
    .PAD(in1[3])
  );
  (* keep = 32'd1 *)
  INBUF _099_ (
    .O(_015_[4]),
    .PAD(in1[4])
  );
  (* keep = 32'd1 *)
  INBUF _100_ (
    .O(_015_[5]),
    .PAD(in1[5])
  );
  (* keep = 32'd1 *)
  INBUF _101_ (
    .O(_015_[6]),
    .PAD(in1[6])
  );
  (* keep = 32'd1 *)
  INBUF _102_ (
    .O(_015_[7]),
    .PAD(in1[7])
  );
  (* keep = 32'd1 *)
  INBUF _103_ (
    .O(_015_[8]),
    .PAD(in1[8])
  );
  (* keep = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/IO_techmap.v:15.33-20.6" *)
  IO_WIDTH_1 #(
    .WIDTH(32'd1)
  ) _104_ (
    .in(_017_),
    .to_fabric(_016_)
  );
  (* keep = 32'd1 *)
  INBUF _105_ (
    .O(_017_),
    .PAD(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/home/kelvin/FABulous_fork/myProject/.FABulous/techmaps.v:42.3-47.2" *)
  Mem #(
    .INIT(512'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .config_bits(1'h0)
  ) \mem_0.mem.0.0  (
    .addr0(\loop_array_instance.arg_mem_0_addr0 ),
    .read_data(_000_),
    .write_data(\mem_0.write_data ),
    .write_en(_003_)
  );
  assign _018_[3] = \loop_array_instance.fsm.std_slice_1_out [3];
  assign _018_[2] = \loop_array_instance.fsm.std_slice_1_out [2];
  assign _018_[1] = \loop_array_instance.fsm.std_slice_1_out [1];
  assign _018_[0] = \loop_array_instance.fsm.std_slice_1_out [0];
  assign _019_[3] = \loop_array_instance.arg_mem_0_addr0 [3];
  assign _019_[2] = \loop_array_instance.arg_mem_0_addr0 [2];
  assign _019_[1] = \loop_array_instance.arg_mem_0_addr0 [1];
  assign _019_[0] = \loop_array_instance.arg_mem_0_addr0 [0];
  assign \loop_array_instance.arg_mem_0_write_data [31] = \mem_0.write_data [31];
  assign \loop_array_instance.arg_mem_0_write_data [30] = \mem_0.write_data [30];
  assign \loop_array_instance.arg_mem_0_write_data [29] = \mem_0.write_data [29];
  assign \loop_array_instance.arg_mem_0_write_data [28] = \mem_0.write_data [28];
  assign \loop_array_instance.arg_mem_0_write_data [27] = \mem_0.write_data [27];
  assign \loop_array_instance.arg_mem_0_write_data [26] = \mem_0.write_data [26];
  assign \loop_array_instance.arg_mem_0_write_data [25] = \mem_0.write_data [25];
  assign \loop_array_instance.arg_mem_0_write_data [24] = \mem_0.write_data [24];
  assign \loop_array_instance.arg_mem_0_write_data [23] = \mem_0.write_data [23];
  assign \loop_array_instance.arg_mem_0_write_data [22] = \mem_0.write_data [22];
  assign \loop_array_instance.arg_mem_0_write_data [21] = \mem_0.write_data [21];
  assign \loop_array_instance.arg_mem_0_write_data [20] = \mem_0.write_data [20];
  assign \loop_array_instance.arg_mem_0_write_data [19] = \mem_0.write_data [19];
  assign \loop_array_instance.arg_mem_0_write_data [18] = \mem_0.write_data [18];
  assign \loop_array_instance.arg_mem_0_write_data [17] = \mem_0.write_data [17];
  assign \loop_array_instance.arg_mem_0_write_data [16] = \mem_0.write_data [16];
  assign \loop_array_instance.arg_mem_0_write_data [15] = \mem_0.write_data [15];
  assign \loop_array_instance.arg_mem_0_write_data [14] = \mem_0.write_data [14];
  assign \loop_array_instance.arg_mem_0_write_data [13] = \mem_0.write_data [13];
  assign \loop_array_instance.arg_mem_0_write_data [12] = \mem_0.write_data [12];
  assign \loop_array_instance.arg_mem_0_write_data [11] = \mem_0.write_data [11];
  assign \loop_array_instance.arg_mem_0_write_data [10] = \mem_0.write_data [10];
  assign \loop_array_instance.arg_mem_0_write_data [9] = \mem_0.write_data [9];
  assign \loop_array_instance.arg_mem_0_write_data [8] = \mem_0.write_data [8];
  assign \loop_array_instance.arg_mem_0_write_data [7] = \mem_0.write_data [7];
  assign \loop_array_instance.arg_mem_0_write_data [6] = \mem_0.write_data [6];
  assign \loop_array_instance.arg_mem_0_write_data [5] = \mem_0.write_data [5];
  assign \loop_array_instance.arg_mem_0_write_data [4] = \mem_0.write_data [4];
  assign \loop_array_instance.arg_mem_0_write_data [3] = \mem_0.write_data [3];
  assign \loop_array_instance.arg_mem_0_write_data [2] = \mem_0.write_data [2];
  assign \loop_array_instance.arg_mem_0_write_data [1] = \mem_0.write_data [1];
  assign \loop_array_instance.arg_mem_0_write_data [0] = \mem_0.write_data [0];
endmodule
